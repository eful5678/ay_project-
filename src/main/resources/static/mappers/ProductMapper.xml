<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.product.ProductMapper">
	<resultMap type="com.example.demo.product.Product" id="ProdResult">
	<result column="num" property="num" />
	<result column="name" property="name" />
	<result column="maker" property="maker" />
	<result column="price" property="price" />
	<result column="origin" property="origin" />
	<result column="material" property="material" />
	<result column="quantity" property="quantity" />
	<result column="imgPath" property="imgPath" />
	<result column="category1" property="category1" />
	<result column="category2" property="category2" />
	<result column="event_num" property="event_num" />
	
</resultMap>
	
<insert id="insert" parameterType="com.example.demo.product.Product">
insert into product values(#{num}, #{name}, #{maker}, #{price}, #{origin}, #{material}, #{quantity}, #{imgPath}, #{category1}, #{category2}, #{event_num})
</insert>
	
<select id="selectByNum" parameterType="int" resultMap="ProdResult">
select*from product where num=#{num}
</select>	
	
<select id="selectByName" parameterType="String" resultMap="ProdResult">
select*from product where name=#{name} order by num
</select>	

<select id="selectByPrice" parameterType="java.util.Map" resultMap="ProdResult">
select*from product where price between #{min} and #{max} order by num
</select>
	
<select id="selectBySellerId" parameterType="String" resultMap="ProdResult">
select*from product where seller_id=#{seller_id} order by num
</select>	
	
<select id="selectByC1" parameterType="int" resultMap="ProdResult">
select*from product where category1 = #{category1} order by num
</select>	
	
<select id="selectByC2" parameterType="int" resultMap="ProdResult">
select*from product where category2 = #{category2} order by num
</select>	

<select id="selectAll" resultMap="ProdResult">
select*from product
</select>	
	
<update id="update" parameterType="com.example.demo.product.Product">
update product set name=#{name}, maker=#{maker}, price=#{price}, origin=#{origin}, material=#{material}, quantity=#{quantity}, imgPath=#{imgPath}, category1=#{category1}, category2=#{category2}, event_num=#{event_num} where num=#{num}
</update>	

<delete id="delete" parameterType="int">
delete product where num=#{num}
</delete>

<select id="getNum" resultType="int">
select seq_product.nextval from dual
</select>

<select id="selectByEvent" resultMap="ProdResult">
select*from product where event_num != 0
</select>	

<update id="decreaseProduct" parameterType="com.example.demo.order.Order">
update product set quantity=quantity-#{quantity} where num=#{p_num} 
</update>

</mapper>