<?xml version="1.0" encoding="UTF-8"?>
<!--
 [Layout]
 %m : 로그내용이 출력
 %p : trace > debug > info > warn > error 등의 priority 출력
 %r : 어플리케이션이 시작되어 로깅이벤트가 발생하는 시점까지의 경과시간을 밀리세컨드로 출력
 %c : 예) 카테고리가 a.b.c 처럼 되어있다면 %c{2}는 b.c가 출력됩니다.
 %n :  플랫폼 종속적인 개행문자가 출력된다. \r\n 또는 \n 일것이다
 %d : 로깅이벤트가 일어나 날짜 출력 ( 프로그램의 실행속도를 느리게 한다.)
     예) %d{HH:mm:ss} 또는 %d{dd MMMM yyyy HH:mm:ss}
 %C : 호출자의 클래스명 출력
    예) 클래스구조가 org.apache.xyz.SomeClass 처럼 되어있다면 %C{2}는 xyz.SomeClass 가 출력됩니다
 %M : 로깅이 발생한 method 이름을 나타냅니다.
 %F : 로깅이 발생한 프로그램 파일명을 나타냅니다.
 %l : 로깅이 발생한 caller의 정보를 나타냅니다 
 %L : 로깅이 발생한 caller의 라인수를 나타냅니다 
 %x : 로깅이 발생한 thread와 관련된 NDC(nested diagnostic context)를 출력합니다. 
 %X : 로깅이 발생한 thread와 관련된 MDC(mapped diagnostic context)를 출력합니다. 
 %% : % 표시를 출력하기 위해 사용한다.  
 %t : 로그이벤트가 발생된 쓰레드의 이름을 출력합니다
-->
<!-- 
https://victorydntmd.tistory.com/173 
        <Pattern>%d{HH:mm:ss.SSS} [%-5level] - %C{4} %M %msg%n</Pattern>

-->


<configuration>
         <!-- 콘솔로 로그를 남김 -->
         <appender name="consoleAppender" class="ch.qos.logback.core.ConsoleAppender">
            <encoder>
                <charset>UTF-8</charset>
                <!-- 로그 메시지 패턴 -->
                <Pattern>%d{HH:mm:ss.SSS} [ %-5level] - %C{2} %msg%n</Pattern>
            </encoder>
         </appender>

         <!-- 파일로 로그를 남김 -->
         <appender name="fileAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>c:\LogExample\totalLog.log</file>
            <append>true</append>
            <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
                <!-- <Pattern>%d{HH:mm:ss.SSS} [%-5level] - %C{4} %M %msg%n</Pattern> -->
                <Pattern>%n%d{HH:mm:ss} %msg</Pattern>
            </encoder>
          <!-- 로그를 남기는 파일의 용량이 10MB가 넘으면 이를 압축 파일로 만들고 새로 로그 파일로 만들라는 정책 -->
            <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
                <MaxFileSize>10MB</MaxFileSize>
            </triggeringPolicy>
          
          <!-- 파일을 덮어쓰는 정책 -->
         <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <FileNamePattern>C:\LogExample\totalLog.%i.log.zip</FileNamePattern>
            <MinIndex>1</MinIndex>
            <MaxIndex>10</MaxIndex>
            </rollingPolicy>
         </appender>
         
         <!-- 파일로 로그를 남김 -->
         <appender name="orderAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>c:\LogExample\order.log</file>
            <append>true</append>
            <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
              <layout class="ch.qos.logback.classic.PatternLayout">
                  <fileHeader>주문날짜, 나이, 성별, 고객ID, 상품번호, 상품명, 제조사, 상품가격, 상품원산지, 상품원재료, 카테고리1, 카테고리2, 이벤트번호, 주문수량, 주문액</fileHeader>
                  <pattern>%n%d{yyyy MMMM dd HH:mm}%msg</pattern>
              </layout>
          </encoder>
          <!-- 로그를 남기는 파일의 용량이 10MB가 넘으면 이를 압축 파일로 만들고 새로 로그 파일로 만들라는 정책 -->
            <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
                <MaxFileSize>10MB</MaxFileSize>
            </triggeringPolicy>
          
          <!-- 파일을 덮어쓰는 정책 -->
         <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <FileNamePattern>C:\LogExample\order.%i.log.zip</FileNamePattern>
            <MinIndex>1</MinIndex>
            <MaxIndex>10</MaxIndex>
            </rollingPolicy>
         </appender>
         

      <!-- 파일로 로그를 남김 -->
         <appender name="memberAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>c:\LogExample\memberLoginTime.log</file>
            <append>true</append>
            <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
              <layout class="ch.qos.logback.classic.PatternLayout">
                  <fileHeader>ID,실행메소드,시간</fileHeader>
                  <pattern>%n%msg%d{yyyy MMMM dd HH:mm:ss}</pattern>
              </layout>
          </encoder>
          <!-- 로그를 남기는 파일의 용량이 10MB가 넘으면 이를 압축 파일로 만들고 새로 로그 파일로 만들라는 정책 -->
            <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
                <MaxFileSize>10MB</MaxFileSize>
            </triggeringPolicy>
          <!-- 파일을 덮어쓰는 정책 -->
         <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <FileNamePattern>C:\LogExample\memberLoginTime.%i.log.zip</FileNamePattern>
            <MinIndex>1</MinIndex>
            <MaxIndex>10</MaxIndex>
            </rollingPolicy>
         </appender>

		<!-- 파일로 로그를 남김 -->
         <appender name="cartAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>c:\LogExample\cart.log</file>
            <append>true</append>
            <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
              <layout class="ch.qos.logback.classic.PatternLayout">
                  <fileHeader>담은시간, 나이, 성별, 고객ID, 상품번호, 상품명, 제조사, 상품가격, 상품원산지, 상품원재료, 카테고리1, 카테고리2, 이벤트번호, 구매여부</fileHeader>
                  <pattern>%n%d{yyyy MMMM dd HH:mm:ss}%msg</pattern>
              </layout>
          </encoder>
          <!-- 로그를 남기는 파일의 용량이 10MB가 넘으면 이를 압축 파일로 만들고 새로 로그 파일로 만들라는 정책 -->
            <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
                <MaxFileSize>10MB</MaxFileSize>
            </triggeringPolicy>
          <!-- 파일을 덮어쓰는 정책 -->
         <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <FileNamePattern>C:\LogExample\cart.%i.log.zip</FileNamePattern>
            <MinIndex>1</MinIndex>
            <MaxIndex>10</MaxIndex>
            </rollingPolicy>
         </appender>
         
         <!-- 파일로 로그를 남김 -->
         <appender name="eventAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>c:\LogExample\event.log</file>
            <append>true</append>
            <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
              <layout class="ch.qos.logback.classic.PatternLayout">
                  <fileHeader>누른시간, 나이, 성별, 고객ID, 클릭횟수</fileHeader>
                  <pattern>%n%d{yyyy MMMM dd HH:mm:ss}%msg</pattern>
              </layout>
          </encoder>
          <!-- 로그를 남기는 파일의 용량이 10MB가 넘으면 이를 압축 파일로 만들고 새로 로그 파일로 만들라는 정책 -->
            <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
                <MaxFileSize>10MB</MaxFileSize>
            </triggeringPolicy>
          <!-- 파일을 덮어쓰는 정책 -->
         <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <FileNamePattern>C:\LogExample\event.%i.log.zip</FileNamePattern>
            <MinIndex>1</MinIndex>
            <MaxIndex>10</MaxIndex>
            </rollingPolicy>
         </appender>
         
         <!-- 파일로 로그를 남김 -->
         <appender name="reviewAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>c:\LogExample\review.log</file>
            <append>true</append>
            <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
              <layout class="ch.qos.logback.classic.PatternLayout">
                  <fileHeader>누른시간, 나이, 성별, 고객ID, 별점</fileHeader>
                  <pattern>%n%d{yyyy MMMM dd HH:mm:ss}%msg</pattern>
              </layout>
          </encoder>
          <!-- 로그를 남기는 파일의 용량이 10MB가 넘으면 이를 압축 파일로 만들고 새로 로그 파일로 만들라는 정책 -->
            <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
                <MaxFileSize>10MB</MaxFileSize>
            </triggeringPolicy>
          <!-- 파일을 덮어쓰는 정책 -->
         <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <FileNamePattern>C:\LogExample\review.%i.log.zip</FileNamePattern>
            <MinIndex>1</MinIndex>
            <MaxIndex>10</MaxIndex>
            </rollingPolicy>
         </appender>
         
         <logger name="com.example.demo.order"  level="info" additivity="false">
            <appender-ref ref="orderAppender" />
         </logger>
         
         <logger name="com.example.demo.shoppingcart"  level="info" additivity="false">
            <appender-ref ref="cartAppender" />
         </logger>
         
         <logger name="com.example.demo.event"  level="info" additivity="false">
            <appender-ref ref="eventAppender" />
         </logger>
         
         <logger name="com.example.demo.review"  level="info" additivity="false">
            <appender-ref ref="reviewAppender" />
         </logger>
         
         <logger name="com.example.demo.member"  level="info" additivity="false">
            <appender-ref ref="memberAppender" />
         </logger>
         
         <!-- root는 글로벌 로거를 의미하며, 위의 logger에 해당하지 않으면 root 로거가 실행된다. -->
         <root level="info">
			<appender-ref ref="consoleAppender"/>
         	<appender-ref ref="fileAppender"/>
         </root>
</configuration>